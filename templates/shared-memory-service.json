{
   "apiVersion": "v1",
   "kind": "Template",
   "labels": {
      "template": "shared-memory-service"
   },
   "metadata": {
      "annotations": {
         "openshift.io/display-name": "Red Hat JBoss Data Grid Shared Memory Service",
         "description": "Red Hat JBoss Data Grid Shared Memory Service for Openshift",
         "iconClass": "icon-datagrid",
         "tags": "java,database,datagrid,jboss",
         "template.openshift.io/documentation-url": "https://www.redhat.com/en/technologies/jboss-middleware/data-grid",
         "template.openshift.io/long-description": "Provides a standalone JBoss Data Grid Caching Service (a high performance, scalable, key/value data grid solution) with persistence.",
         "template.openshift.io/provider-display-name": "Red Hat, Inc.",
         "template.openshift.io/support-url": "https://www.redhat.com/en/services/support"
      },
      "name": "shared-memory-service"
   },
   "objects": [
      {
         "kind": "ServiceAccount",
         "apiVersion": "v1",
         "metadata": {
            "name": "${APPLICATION_NAME}"
         }
      },
      {
         "kind": "RoleBinding",
         "apiVersion": "v1",
         "metadata": {
            "name": "${APPLICATION_NAME}-view"
         },
         "userNames": [
            "system:serviceaccount:${NAMESPACE}:${APPLICATION_NAME}"
         ],
         "groupNames": null,
         "subjects": [
            {
               "kind": "ServiceAccount",
               "name": "${APPLICATION_NAME}"
            }
         ],
         "roleRef": {
            "name": "view"
         }
      },
      {
         "apiVersion": "v1",
         "kind": "Service",
         "metadata": {
            "annotations": {
               "description": "Headless service for StatefulSets"
            },
            "labels": {
               "application": "${APPLICATION_NAME}"
            },
            "name": "${APPLICATION_NAME}-headless"
         },
         "spec": {
            "ports": [
               {
                  "name": "http",
                  "port": 8080,
                  "targetPort": 8080
               },
               {
                  "name": "hotrod",
                  "port": 11222,
                  "targetPort": 11222
               }
            ],
            "selector": {
               "deploymentConfig": "${APPLICATION_NAME}"
            },
            "clusterIP": "None"
         }
      },
      {
         "apiVersion": "v1",
         "kind": "Service",
         "metadata": {
            "annotations": {
               "description": "The web server's HTTP port."
            },
            "labels": {
               "application": "${APPLICATION_NAME}"
            },
            "name": "${APPLICATION_NAME}-http"
         },
         "spec": {
            "ports": [
               {
                  "port": 8080,
                  "targetPort": 8080
               }
            ],
            "selector": {
               "deploymentConfig": "${APPLICATION_NAME}"
            }
         }
      },
      {
         "apiVersion": "v1",
         "kind": "Service",
         "metadata": {
            "annotations": {
               "description": "Hot Rod's port."
            },
            "labels": {
               "application": "${APPLICATION_NAME}"
            },
            "name": "${APPLICATION_NAME}-hotrod"
         },
         "spec": {
            "ports": [
               {
                  "port": 11222,
                  "targetPort": 11222
               }
            ],
            "selector": {
               "deploymentConfig": "${APPLICATION_NAME}"
            }
         }
      },
      {
         "apiVersion": "v1",
         "kind": "Service",
         "metadata": {
            "annotations": {
               "description": "Memcached port."
            },
            "labels": {
               "application": "${APPLICATION_NAME}"
            },
            "name": "${APPLICATION_NAME}-memcached"
         },
         "spec": {
            "ports": [
               {
                  "port": 11211,
                  "targetPort": 11211
               }
            ],
            "selector": {
               "deploymentConfig": "${APPLICATION_NAME}"
            }
         }
      },
      {
         "apiVersion": "apps/v1beta1",
         "kind": "StatefulSet",
         "metadata": {
            "labels": {
               "application": "${APPLICATION_NAME}"
            },
            "name": "${APPLICATION_NAME}"
         },
         "spec": {
            "serviceName": "${APPLICATION_NAME}-headless",
            "replicas": "${{NUMBER_OF_INSTANCES}}",
            "strategy": {
               "type": "Rolling",
               "rollingParams": {
                  "updatePeriodSeconds": 20,
                  "intervalSeconds": 20,
                  "timeoutSeconds": 1200,
                  "maxUnavailable": 1,
                  "maxSurge": 1
               }
            },
            "template": {
               "metadata": {
                  "labels": {
                     "application": "${APPLICATION_NAME}",
                     "deploymentConfig": "${APPLICATION_NAME}"
                  },
                  "name": "${APPLICATION_NAME}"
               },
               "spec": {
                  "containers": [
                     {
                        "env": [
                           {
                              "name": "PROFILE",
                              "value": "SHARED-MEMORY-SERVICE"
                           },
                           {
                              "name": "OPENSHIFT_KUBE_PING_LABELS",
                              "value": "application=${APPLICATION_NAME}"
                           },
                           {
                              "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
                              "valueFrom": {
                                 "fieldRef": {
                                    "fieldPath": "metadata.namespace"
                                 }
                              }
                           },
                           {
                              "name": "KUBERNETES_LABELS",
                              "value": "application=${APPLICATION_NAME}"
                           },
                           {
                              "name": "KUBERNETES_NAMESPACE",
                              "valueFrom": {
                                 "fieldRef": {
                                    "fieldPath": "metadata.namespace"
                                 }
                              }
                           },
                           {
                              "name": "NODE_NAME",
                              "valueFrom": {
                                 "fieldRef": {
                                    "fieldPath": "metadata.name"
                                 }
                              }
                           },
                           {
                              "name": "MGMT_USER",
                              "value": "${MANAGEMENT_USER}"
                           },
                           {
                              "name": "MGMT_PASS",
                              "value": "${MANAGEMENT_PASSWORD}"
                           },
                           {
                              "name": "APP_USER",
                              "value": "${APPLICATION_USER}"
                           },
                           {
                              "name": "APP_PASS",
                              "value": "${APPLICATION_PASSWORD}"
                           },
                           {
                               "name": "NUMBER_OF_OWNERS",
                               "value": "${NUMBER_OF_OWNERS}"
                           }
                        ],
                        "image": "${IMAGE}",
                        "livenessProbe": {
                           "exec": {
                              "command": [
                                 "/opt/datagrid/bin/livenessProbe.sh"
                              ]
                           },
                           "initialDelaySeconds": 5,
                           "timeoutSeconds": 10,
                           "periodSeconds": 20,
                           "successThreshold": 1,
                           "failureThreshold": 5
                        },
                        "readinessProbe": {
                           "exec": {
                              "command": [
                                 "/opt/datagrid/bin/readinessProbe.sh"
                              ]
                           },
                           "initialDelaySeconds": 7,
                           "timeoutSeconds": 10,
                           "periodSeconds": 20,
                           "successThreshold": 2,
                           "failureThreshold": 5
                        },
                        "name": "${APPLICATION_NAME}",
                        "ports": [
                           {
                              "containerPort": 8080,
                              "name": "http",
                              "protocol": "TCP"
                           },
                           {
                              "containerPort": 8888,
                              "name": "ping",
                              "protocol": "TCP"
                           },
                           {
                              "containerPort": 11222,
                              "name": "hotrod",
                              "protocol": "TCP"
                           },
                           {
                              "containerPort": 11211,
                              "name": "memcached",
                              "protocol": "TCP"
                           }
                        ],
                        "volumeMounts": [
                           {
                              "name": "${APPLICATION_NAME}-data",
                              "mountPath": "/opt/jboss/infinispan-server/standalone/data"
                           }
                        ],
                        "resources": {
                           "requests": {
                              "cpu": "0.5",
                              "memory": "512Mi"
                           },
                           "limits": {
                              "cpu": "0.5",
                              "memory": "512Mi"
                           }
                        }
                     }
                  ],
                  "terminationGracePeriodSeconds": 60,
                  "serviceAccountName": "${APPLICATION_NAME}"
               }
            },
            "triggers": [
               {
                  "type": "ConfigChange"
               }
            ],
            "volumeClaimTemplates": [
               {
                  "metadata": {
                     "name": "${APPLICATION_NAME}-data"
                  },
                  "spec": {
                     "accessModes": [
                        "ReadWriteOnce"
                     ],
                     "resources": {
                        "requests": {
                           "storage": "1Gi"
                        }
                     }
                  }
               }
            ]
         }
      }
   ],
   "parameters": [
      {
         "description": "Namespace for the application. Note: The namespace is required for creating proper RoleBindings. Specifying wrong namespace will prevent cluster from forming.",
         "name": "NAMESPACE",
         "required": true,
         "value": "myproject"
      },
      {
         "description": "The name for the application.",
         "name": "APPLICATION_NAME",
         "required": true,
         "value": "shared-memory-service-app"
      },
      {
         "description": "Infinispan image.",
         "name": "IMAGE",
         "required": true,
         "value": "docker-registry.engineering.redhat.com/jboss-dataservices/datagrid-online-services"
      },
      {
         "description": "Number of instances in the cluster.",
         "name": "NUMBER_OF_INSTANCES",
         "required": true,
         "value": "1"
      },
      {
        "description": "Number of replicas for each cache entry in the cluster.",
        "name": "NUMBER_OF_OWNERS",
        "required": false,
        "value": "2"
     }
   ]
}
